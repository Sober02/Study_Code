public class Object_Oriented {
    public static void main(String[] args) {
        //面向对象编程（Object Oriented Programming）(OOP)
        //1.类和对象是什么？
        //类：是共同特征的描述(设计图)；对象：是真实存在的具体实例。
        //2.如何得到对象？
        /*
        public class 类名 {
            1.成员变量（代表属性的，一般是名词）
            2.成员方法（代表行为的，一般是动词）
        }
        类名 对象名 = new 类名();
         */
        //3.拿到对象后能做什么？
        //对象.成员变量；
        //对象.成员方法(...)

        //定义类的补充和注意事项
            //用来描述一类事物的类，专业叫做：Javabean类。
            //在Javabean类中，是不写main方法的。

            //在以前，编写main方法的类，叫做：测试类。
            //我们可以在测试类中创建Javabean类的对象并进行赋值调用。

        //  类名首字母建议大写，需要见名知意，驼峰模式。
        //  一个java文件中可以定义多个class类，且只能一个类是public修饰，而且public修饰的类名必须成为代码文件名。
        //  实际开发中建议还是一个文件定义一个class类
        //  成员变量的完整定义格式是:修饰符 数据类型 变量名称 = 初始化值；一般无需指定初始化值，存在默认值。


       //对象的成员变量的默认值规则
       /*
       数据类型            |明细             | 默认值
       ——————————————————————————————————————————————
       基本类型     byte、short、int、long    | 0
                    float、double            | 0.0
                    boolean                  | false
       ———————————————————————————————————————————————
       引用类型     类、接口、数组、String    | null
        */

        /*
        1.定义类有哪些建议，有什么需要注意的?
              类名首字母建议大写、英文、有意义，满足驼峰模式，不能用关键字，满足标志符规定；
              一个代码文件中可以定义多个类，但是只能一个类是public修饰的；
              public修饰的类名必须是Java代码的文件名称。
        2.成员变量的格式是什么样的，有什么特点?
            成员变量的完整定义格式是: 修饰符 数据类型 变量名称 = 初始化值
            一般无需指定初始化值。
         */
        /*
        1.private关键字是一个权限修饰符
        2.可以修饰成员（成员变量和成员方法）
        3.被private修饰的成员只能在本类中才能访问
        4.针对private修饰的成员变量，如果需要被其他类使用，提供相应的操作
        5.提供"setXxx(参数)"的方法，用于给成员变量赋值，方法用public修饰 - 参考GirlFriend
        6.提供"getXXX()"方法，用于获取成员变量的值，方法用public修饰
         */


        //重点：封装
        /*
        1.什么是封装？
            告诉我们，如何正确设计对象的属性和方法。
            原则：对象代表什么，就得封装对应的数据，并提供数据对应的行为
            例：人画圆-定义人和圆两个类- 画圆的方法是属于圆的-圆是自己画的，人调用了圆自己的方法画了圆
            人关门-门是自己关的- 门的开关：即门的状态数据  修改门的状态(即调用开门/关门的方法)

        2.理解封装思想的好处
            让编程变得很简单，有什么事，找对象，调方法就行。
            降低我们的学习成本，可以少学，少记，不用记对象有哪些方法，需要的时候去找即可。
         */

        /*
        构造方法注意事项
            ①构造方法的定义
                如果没有定义构造方法，系统将给出一个默认的无参数构造方法
                如果定义了构造方法，系统将不再提供默认的构造方法
            ②构造方法的重载
                带参构造方法，和无参数构造方法，两者方法名相同，但是参数不同，这叫做构造方法的重载
            ③推荐使用方式
                无论是否使用，都手动书写无参数构造方法，和带全部参数的构造方法

         总结：
         1.构造方法的作用?
               创造对象的时候，由虚拟机自动调用，给成员变量进行初始化的
         2.构造方法有几种，各自的作用是什么?
                无参数构造方法:初始化的对象时，成员变量的数据均采用默认值。
                有参数构造方法:在初始化对象的时候，同时可以为对象进行赋值
         3.构造方法有哪些注意事项?
                任何类定义出来，默认就自带了无参数构造器，写不写都有
                一旦定义了有参数构造器，无参数构造器就没有了，此时就需要自己写无参数构造器了
                建议在任何时候都手动写上空参和带全部参数的构造方法

         */
        //标准的Javabean类
        /*
            1.类名需要见名知意
            2.成员变量使用private修饰
            3.提供至少两个构造方法
                无参构造方法
                带全部参数的构造方法
            4.成员方法
                提供每一个成员变量对应的setXxx()/getXxx()
                如果还有其他行为，也需要写上
         */


    }
}
